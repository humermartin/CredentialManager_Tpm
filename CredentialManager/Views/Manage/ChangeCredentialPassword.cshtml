@model CredentialManager.ViewModels.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Credential Password";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("ChangeCredentialPassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Change Password Form</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    if (!string.IsNullOrWhiteSpace(Model.UserName))
    {
        <div class="form-group">
            @Html.Label("UserName", new { @class = "col-md-2 control-label" })
            <div class="col-md-10" style="max-width: 310px !important; max-height: 34px !important;">
                @Html.Label("", String.Format("{0}", Model.UserName), new { @class = "form-control" })
            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", @autocomplete = "off" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @autocomplete = "off" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @autocomplete = "off" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Change password" class="btn btn-default" />
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}